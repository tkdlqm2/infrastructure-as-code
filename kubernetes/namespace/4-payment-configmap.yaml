# 4-payment-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: payment-config
  namespace: payment-service
data:
  APPLICATION_PORT: "8080"
  SPRING_PROFILES_ACTIVE: "production"
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: "INFO"
  DATABASE_HOST: "payment-db-service.database.svc.cluster.local"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "paymentdb"
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service.message-queue.svc.cluster.local:9092"
  application.yml: |
    server:
      port: 8080
    
    spring:
      application:
        name: payment-service
      datasource:
        url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
        driver-class-name: org.postgresql.Driver
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        consumer:
          group-id: payment-group
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics
