apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: {{ .Values.namespaces.orderService }}
  labels:
    app: order-service
    {{- include "order-payment-system.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.orderService.replicaCount }}
  selector:
    matchLabels:
      app: order-service
  strategy:
    type: {{ .Values.deploymentStrategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.deploymentStrategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deploymentStrategy.rollingUpdate.maxUnavailable }}
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: "{{ .Values.global.imageRegistry }}/order-service:{{ .Values.orderService.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.orderService.image.pullPolicy | default "Always" }}
          ports:
            - containerPort: {{ .Values.services.order.port }}
          env:
            - name: SPRING_CONFIG_LOCATION
              value: "classpath:/application.yml,/config/application.yml"
            - name: SERVER_PORT
              value: "{{ .Values.services.order.port }}"
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.global.environment }}"
            - name: LOGGING_LEVEL_ROOT
              value: "INFO"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.services.orderdb.name }}.{{ .Values.namespaces.database }}.svc.cluster.local:5432/{{ .Values.orderdb.auth.database }}"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: order-secrets
                  key: DATABASE_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: order-secrets
                  key: DATABASE_PASSWORD
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Values.services.kafka.name }}.{{ .Values.namespaces.messageQueue }}.svc.cluster.local:9092"
            - name: PAYMENT_SERVICE_URL
              value: "http://{{ .Values.services.payment.name }}.{{ .Values.namespaces.paymentService }}.svc.cluster.local:{{ .Values.services.payment.port }}"
          volumeMounts:
            - name: config-volume
              mountPath: /config
          resources:
            {{- toYaml .Values.orderService.resources | nindent 10 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.services.order.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.services.order.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
      volumes:
        - name: config-volume
          configMap:
            name: order-config
            items:
              - key: application.yml
                path: application.yml